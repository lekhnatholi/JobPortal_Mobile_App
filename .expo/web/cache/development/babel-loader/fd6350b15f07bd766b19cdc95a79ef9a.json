{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/navigation/navigator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport JobDetail from \"../screens/homeStacks/jobDetail\";\nimport Search from \"../screens/searchStacks/search\";\nimport Login from \"../screens/profileStacks/login\";\nimport Register from \"../screens/profileStacks/register\";\nimport ChangePassword from \"../screens/profileStacks/changePassword\";\nimport Home from \"../screens/homeStacks/home\";\nimport Profile from \"../screens/profileStacks/profile\";\nimport { DefaultThemeColors, DarkThemeColors } from \"../utils/constants/Colors\";\nimport TabBarIcon from \"../shared/tabBarIcon\";\nimport Header from \"../shared/header\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport BasicInfo from \"../screens/profileStacks/basicInfo\";\nimport Resume from \"../screens/profileStacks/resume\";\nimport JobsApplied from \"../screens/profileStacks/jobsApplied\";\nvar INITIAL_ROUTE_NAME = \"HomeTabs\";\n\nfunction Navigator() {\n  var _useContext = useContext(ThemeContext),\n      theme = _useContext.theme;\n\n  var _useContext2 = useContext(AuthContext),\n      authUser = _useContext2.authUser;\n\n  var isUserLoggedIn = authUser.token ? true : false;\n  var isThemeDark = theme === \"dark\" ? true : false;\n  var Colors = isThemeDark ? DarkThemeColors : DefaultThemeColors;\n  var customStackHeaderStyle = {\n    headerStyle: {\n      backgroundColor: Colors.headerBg,\n      height: 60\n    },\n    headerTintColor: Colors.headerTint\n  };\n  var customTabBarStyle = {\n    activeTintColor: Colors.tabIconSelected,\n    inactiveTintColor: Colors.tabIconDefault,\n    allowFontScaling: true,\n    labelStyle: {\n      fontSize: 12,\n      paddingTop: 2\n    },\n    tabStyle: {\n      paddingTop: 10,\n      paddingBottom: 5\n    },\n    style: {\n      backgroundColor: Colors.tabBg,\n      height: 60,\n      borderTopColor: DefaultThemeColors.tabBarBorderDefault\n    }\n  };\n  var Tabs = createBottomTabNavigator();\n  var Stack = createStackNavigator();\n\n  var HomeStacks = function HomeStacks() {\n    return React.createElement(Stack.Navigator, {\n      screenOptions: customStackHeaderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Home\",\n      component: Home,\n      options: {\n        headerTitle: function headerTitle() {\n          return React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 32\n            }\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"JobDetail\",\n      component: JobDetail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var SearchStacks = function SearchStacks() {\n    return React.createElement(Stack.Navigator, {\n      screenOptions: _objectSpread(_objectSpread({}, customStackHeaderStyle), {}, {\n        headerTitle: function headerTitle() {\n          return React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 30\n            }\n          });\n        }\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Search\",\n      component: Search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var ProfileStacks = function ProfileStacks() {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: Profile,\n      screenOptions: customStackHeaderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Profile\",\n      component: Profile,\n      options: {\n        headerTitle: function headerTitle() {\n          return React.createElement(Header, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 32\n            }\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }), isUserLoggedIn ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n      name: \"BasicInfo\",\n      component: BasicInfo,\n      options: {\n        title: \"Basic Info\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Resume\",\n      component: Resume,\n      options: {\n        title: \"Resume\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"JobsApplied\",\n      component: JobsApplied,\n      options: {\n        title: \"Jobs Applied\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"ChangePassword\",\n      component: ChangePassword,\n      options: {\n        title: \"Change Password\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Register\",\n      component: Register,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  return React.createElement(Tabs.Navigator, {\n    initialRouteName: INITIAL_ROUTE_NAME,\n    tabBarOptions: customTabBarStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }\n  }, React.createElement(Tabs.Screen, {\n    name: \"HomeTab\",\n    children: HomeStacks,\n    options: {\n      tabBarLabel: \"Home\",\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(TabBarIcon, {\n          color: color,\n          size: size,\n          name: \"home\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"SearchTab\",\n    children: SearchStacks,\n    options: {\n      tabBarLabel: \"Search\",\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(TabBarIcon, {\n          color: color,\n          size: size,\n          name: \"search\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }), React.createElement(Tabs.Screen, {\n    name: \"ProfileTab\",\n    children: ProfileStacks,\n    options: {\n      tabBarLabel: \"Profile\",\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(TabBarIcon, {\n          color: color,\n          size: size,\n          name: \"person-outline\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Navigator;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/navigation/navigator.js"],"names":["React","useContext","createStackNavigator","createBottomTabNavigator","JobDetail","Search","Login","Register","ChangePassword","Home","Profile","DefaultThemeColors","DarkThemeColors","TabBarIcon","Header","AuthContext","ThemeContext","BasicInfo","Resume","JobsApplied","INITIAL_ROUTE_NAME","Navigator","theme","authUser","isUserLoggedIn","token","isThemeDark","Colors","customStackHeaderStyle","headerStyle","backgroundColor","headerBg","height","headerTintColor","headerTint","customTabBarStyle","activeTintColor","tabIconSelected","inactiveTintColor","tabIconDefault","allowFontScaling","labelStyle","fontSize","paddingTop","tabStyle","paddingBottom","style","tabBg","borderTopColor","tabBarBorderDefault","Tabs","Stack","HomeStacks","headerTitle","SearchStacks","ProfileStacks","title","tabBarLabel","tabBarIcon","color","size"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\n/** Screens */\nimport JobDetail from \"../screens/homeStacks/jobDetail\";\nimport Search from \"../screens/searchStacks/search\";\nimport Login from \"../screens/profileStacks/login\";\nimport Register from \"../screens/profileStacks/register\";\nimport ChangePassword from \"../screens/profileStacks/changePassword\";\nimport Home from \"../screens/homeStacks/home\";\nimport Profile from \"../screens/profileStacks/profile\";\n/** utils */\nimport { DefaultThemeColors, DarkThemeColors } from \"../utils/constants/Colors\";\n/** shared components */\nimport TabBarIcon from \"../shared/tabBarIcon\";\nimport Header from \"../shared/header\";\nimport { AuthContext } from \"../contexts/AuthContext\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport BasicInfo from \"../screens/profileStacks/basicInfo\";\nimport Resume from \"../screens/profileStacks/resume\";\nimport JobsApplied from \"../screens/profileStacks/jobsApplied\";\n\n//initial route name upon app load\nconst INITIAL_ROUTE_NAME = \"HomeTabs\";\n\nfunction Navigator() {\n  //fetch theme context value\n  const { theme } = useContext(ThemeContext);\n  //fetch authenticated user context value\n  const { authUser } = useContext(AuthContext);\n\n  //user login status\n  const isUserLoggedIn = authUser.token ? true : false;\n\n  //theme status\n  const isThemeDark = theme === \"dark\" ? true : false;\n\n  //colors object\n  const Colors = isThemeDark ? DarkThemeColors : DefaultThemeColors;\n\n  //cutomizing stack header\n  const customStackHeaderStyle = {\n    headerStyle: {\n      backgroundColor: Colors.headerBg,\n      height: 60,\n    },\n    headerTintColor: Colors.headerTint,\n  };\n\n  //cutomizing bottom tab-bar\n  const customTabBarStyle = {\n    activeTintColor: Colors.tabIconSelected,\n    inactiveTintColor: Colors.tabIconDefault,\n    allowFontScaling: true,\n    labelStyle: { fontSize: 12, paddingTop: 2 },\n    tabStyle: { paddingTop: 10, paddingBottom: 5 },\n    style: {\n      backgroundColor: Colors.tabBg,\n      height: 60,\n      borderTopColor: DefaultThemeColors.tabBarBorderDefault,\n    },\n  };\n\n  const Tabs = createBottomTabNavigator();\n  const Stack = createStackNavigator();\n\n  //home stack contains home and job detail screen\n  const HomeStacks = function () {\n    return (\n      <Stack.Navigator screenOptions={customStackHeaderStyle}>\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{\n            headerTitle: () => <Header />,\n          }}\n        />\n        <Stack.Screen name=\"JobDetail\" component={JobDetail} />\n      </Stack.Navigator>\n    );\n  };\n\n  //search stack contains serach only\n  const SearchStacks = function () {\n    return (\n      <Stack.Navigator\n        screenOptions={{\n          ...customStackHeaderStyle,\n          headerTitle: () => <Header />,\n        }}\n      >\n        <Stack.Screen name=\"Search\" component={Search} />\n      </Stack.Navigator>\n    );\n  };\n\n  //profile stack contains profile, change display picture, edit profile and change password screen\n  const ProfileStacks = function () {\n    return (\n      <Stack.Navigator\n        initialRouteName={Profile}\n        screenOptions={customStackHeaderStyle}\n      >\n        <Stack.Screen\n          name=\"Profile\"\n          component={Profile}\n          options={{\n            headerTitle: () => <Header />,\n          }}\n        />\n        {/* check if user is logged in */}\n        {isUserLoggedIn ? (\n          <>\n            <Stack.Screen\n              name=\"BasicInfo\"\n              component={BasicInfo}\n              options={{\n                title: \"Basic Info\",\n              }}\n            />\n            <Stack.Screen\n              name=\"Resume\"\n              component={Resume}\n              options={{\n                title: \"Resume\",\n              }}\n            />\n            <Stack.Screen\n              name=\"JobsApplied\"\n              component={JobsApplied}\n              options={{\n                title: \"Jobs Applied\",\n              }}\n            />\n            <Stack.Screen\n              name=\"ChangePassword\"\n              component={ChangePassword}\n              options={{\n                title: \"Change Password\",\n              }}\n            />\n          </>\n        ) : (\n          <>\n            <Stack.Screen name=\"Login\" component={Login} />\n            <Stack.Screen name=\"Register\" component={Register} />\n          </>\n        )}\n      </Stack.Navigator>\n    );\n  };\n\n  return (\n    <Tabs.Navigator\n      initialRouteName={INITIAL_ROUTE_NAME}\n      tabBarOptions={customTabBarStyle}\n    >\n      <Tabs.Screen\n        name=\"HomeTab\"\n        children={HomeStacks}\n        options={{\n          tabBarLabel: \"Home\",\n          tabBarIcon: ({ color, size }) => (\n            <TabBarIcon color={color} size={size} name=\"home\" />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"SearchTab\"\n        children={SearchStacks}\n        options={{\n          tabBarLabel: \"Search\",\n          tabBarIcon: ({ color, size }) => (\n            <TabBarIcon color={color} size={size} name=\"search\" />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"ProfileTab\"\n        children={ProfileStacks}\n        options={{\n          tabBarLabel: \"Profile\",\n          tabBarIcon: ({ color, size }) => (\n            <TabBarIcon color={color} size={size} name=\"person-outline\" />\n          ),\n        }}\n      />\n    </Tabs.Navigator>\n  );\n}\n\nexport default Navigator;\n"]},"metadata":{},"sourceType":"module"}