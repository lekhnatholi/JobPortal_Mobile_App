{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/shared/jobAppliedBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { DarkThemeColors, DefaultThemeColors } from \"../utils/constants/Colors\";\nimport { globalStyles, images } from \"../styles/globalStyles\";\nimport Icon from \"./icon\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport AppText from \"./appText\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nfunction JobAppliedBox(_ref) {\n  var job = _ref.job,\n      _onPress = _ref.onPress;\n\n  var _useContext = useContext(ThemeContext),\n      isThemeDark = _useContext.isThemeDark;\n\n  var Colors = isThemeDark ? DarkThemeColors : DefaultThemeColors;\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.JobAppliedBox), {}, {\n      backgroundColor: Colors.primaryBg\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: images.defaultLogo,\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.jobInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress(job);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    size: 16,\n    color: \"info\",\n    family: \"semi-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, job.title)), React.createElement(AppText, {\n    color: \"secondary\",\n    weight: \"600\",\n    size: 14,\n    family: \"semi-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, job.company.name), React.createElement(View, {\n    style: styles.jobInfoBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: globalStyles.rowAlignCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"location-on\",\n    size: 14,\n    color: \"#666666\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(AppText, {\n    color: \"secondary\",\n    size: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: \"marginLeft: 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \" \", job.company.address))), React.createElement(View, {\n    style: globalStyles.rowAlignCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"attach-money\",\n    size: 14,\n    color: \"#666666\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(AppText, {\n    color: \"secondary\",\n    size: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: \"marginLeft: 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \" \", job.salary, \" \"))))));\n}\n\nvar styles = StyleSheet.create({\n  JobAppliedBox: {\n    padding: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#ffffff\",\n    borderBottomColor: \"#c1c1c1\",\n    borderBottomWidth: 1\n  },\n  logo: {\n    height: 70,\n    width: 70,\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#ccc\"\n  },\n  jobInfo: {\n    marginLeft: 30,\n    flexGrow: 1,\n    justifyContent: \"center\"\n  },\n  jobInfoBody: {\n    marginLeft: 10,\n    marginVertical: 5\n  }\n});\nexport default JobAppliedBox;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/shared/jobAppliedBox.js"],"names":["React","useContext","DarkThemeColors","DefaultThemeColors","globalStyles","images","Icon","ThemeContext","AppText","TouchableOpacity","JobAppliedBox","job","onPress","isThemeDark","Colors","styles","backgroundColor","primaryBg","defaultLogo","logo","jobInfo","title","company","name","jobInfoBody","rowAlignCenter","address","salary","StyleSheet","create","padding","flexDirection","borderBottomColor","borderBottomWidth","height","width","alignSelf","borderWidth","borderColor","marginLeft","flexGrow","justifyContent","marginVertical"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { View, Text, StyleSheet, Image } from \"react-native\";\nimport { DarkThemeColors, DefaultThemeColors } from \"../utils/constants/Colors\";\nimport { globalStyles, images } from \"../styles/globalStyles\";\nimport Icon from \"./icon\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport AppText from \"./appText\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nfunction JobAppliedBox({ job, onPress }) {\n  const { isThemeDark } = useContext(ThemeContext);\n  const Colors = isThemeDark ? DarkThemeColors : DefaultThemeColors;\n\n  return (\n    <View style={{ ...styles.JobAppliedBox, backgroundColor: Colors.primaryBg }}>\n      <Image source={images.defaultLogo} style={styles.logo} />\n      <View style={styles.jobInfo}>\n        <TouchableOpacity onPress={() => onPress(job)}>\n          <AppText size={16} color=\"info\" family=\"semi-bold\">\n            {job.title}\n          </AppText>\n        </TouchableOpacity>\n        <AppText color=\"secondary\" weight=\"600\" size={14} family=\"semi-bold\">\n          {job.company.name}\n        </AppText>\n\n        <View style={styles.jobInfoBody}>\n          <View style={globalStyles.rowAlignCenter}>\n            <Icon name=\"location-on\" size={14} color=\"#666666\" />\n            <AppText color=\"secondary\" size={12}>\n              <Text style=\"marginLeft: 5\"> {job.company.address}</Text>\n            </AppText>\n          </View>\n          <View style={globalStyles.rowAlignCenter}>\n            <Icon name=\"attach-money\" size={14} color=\"#666666\" />\n            <AppText color=\"secondary\" size={12}>\n              <Text style=\"marginLeft: 5\"> {job.salary} </Text>\n            </AppText>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  JobAppliedBox: {\n    padding: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#ffffff\",\n    borderBottomColor: \"#c1c1c1\",\n    borderBottomWidth: 1,\n  },\n  logo: {\n    height: 70,\n    width: 70,\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n  },\n  jobInfo: { marginLeft: 30, flexGrow: 1, justifyContent: \"center\" },\n\n  jobInfoBody: {\n    marginLeft: 10,\n    marginVertical: 5,\n  }\n\n});\n\nexport default JobAppliedBox;\n"]},"metadata":{},"sourceType":"module"}