{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\nvar themeHandler = function themeHandler(initialState) {\n  var _React$useState = React.useState(initialState),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      theme = _React$useState2[0],\n      setTheme = _React$useState2[1];\n\n  var toggleTheme = function toggleTheme() {\n    try {\n      var newTheme = theme === \"dark\" ? \"default\" : \"dark\";\n      setTheme(newTheme);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  var isThemeDark = theme === \"dark\" ? true : false;\n  return {\n    theme: theme,\n    toggleTheme: toggleTheme,\n    isThemeDark: isThemeDark\n  };\n};\n\nexport default themeHandler;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/utils/custom-hooks/ThemeHandler.js"],"names":["React","themeHandler","initialState","useState","theme","setTheme","toggleTheme","newTheme","e","console","log","isThemeDark"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,YAAD,EAAkB;AAAA,wBACXF,KAAK,CAACG,QAAN,CAAeD,YAAf,CADW;AAAA;AAAA,MAC9BE,KAD8B;AAAA,MACvBC,QADuB;;AAGrC,MAAMC,WAAW,GAAI,SAAfA,WAAe,GAAM;AACvB,QAAI;AACD,UAAIC,QAAQ,GAAGH,KAAK,KAAK,MAAV,GAAmB,SAAnB,GAA+B,MAA9C;AAEAC,MAAAA,QAAQ,CAACE,QAAD,CAAR;AACF,KAJD,CAIE,OAAMC,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GARD;;AAUA,MAAMG,WAAW,GAAGP,KAAK,KAAK,MAAV,GAAmB,IAAnB,GAA0B,KAA9C;AAEA,SAAO;AACLA,IAAAA,KAAK,EAALA,KADK;AAELE,IAAAA,WAAW,EAAXA,WAFK;AAGLK,IAAAA,WAAW,EAAXA;AAHK,GAAP;AAKD,CApBD;;AAqBA,eAAeV,YAAf","sourcesContent":["import * as React from \"react\";\nimport { AsyncStorage } from \"react-native\";\n\nconst themeHandler = (initialState) => {\n  const [theme, setTheme] = React.useState(initialState);\n\n  const toggleTheme =  () => {\n      try {\n         let newTheme = theme === \"dark\" ? \"default\" : \"dark\";\n        //  await AsyncStorage.setItem(\"theme\", newTheme);\n         setTheme(newTheme);\n      } catch(e) {\n          console.log(e);\n      }\n  };\n\n  const isThemeDark = theme === \"dark\" ? true : false;\n  \n  return {\n    theme,\n    toggleTheme,\n    isThemeDark\n  };\n};\nexport default themeHandler;\n"]},"metadata":{},"sourceType":"module"}