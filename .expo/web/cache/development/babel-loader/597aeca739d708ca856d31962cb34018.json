{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/resume.js\";\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { DefaultThemeColors } from \"../../utils/constants/Colors\";\nimport Icon from \"../../shared/icon\";\nimport AppText from \"../../shared/appText\";\nimport ResumeCover from \"../../assets/img/file-upload.jpg\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport Axios from \"axios\";\nimport { globalStyles } from \"../../styles/globalStyles\";\nimport { serializeErrors } from \"../../utils/Helpers\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nfunction Resume() {\n  var _useContext = useContext(AuthContext),\n      authUser = _useContext.authUser,\n      updateAuthUserCVStatus = _useContext.updateAuthUserCVStatus;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _pickDocument = function _pickDocument() {\n    var result;\n    return _regeneratorRuntime.async(function _pickDocument$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(DocumentPicker.getDocumentAsync({}));\n\n          case 3:\n            result = _context.sent;\n\n            if (!(result.type == \"success\")) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", result);\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  var handleCVSubmit = function handleCVSubmit() {\n    setIsSubmitting(true);\n\n    _pickDocument().then(function (document) {\n      if (!document) return;\n      setIsSubmitting(true);\n      var file = {\n        uri: document.uri,\n        type: \"application/pdf\",\n        name: \"cv.pdf\"\n      };\n      var formData = new FormData();\n      formData.append(\"cv\", file);\n\n      _uplaodCV(formData).then(function (user) {\n        console.log(user);\n        if (!user || !user.cv) return;\n        updateAuthUserCVStatus();\n        alert('Resume uploaded successfully');\n      }).catch(function (err) {\n        return console.log(err);\n      }).then(function () {\n        return setIsSubmitting(false);\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n\n  var _uplaodCV = function _uplaodCV(formData) {\n    var options, response;\n    return _regeneratorRuntime.async(function _uplaodCV$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            options = {\n              method: \"POST\",\n              url: apiPath + \"/jobseeker/edit-profile\",\n              data: formData,\n              headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"multipart/form-data\"\n              }\n            };\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(Axios(options).then(function (res) {\n              return res.data;\n            }));\n\n          case 4:\n            response = _context2.sent;\n\n            if (!(response.resp == 1)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", response.user);\n\n          case 7:\n            _context2.next = 12;\n            break;\n\n          case 9:\n            _context2.prev = 9;\n            _context2.t0 = _context2[\"catch\"](0);\n\n            if (Axios.isCancel(_context2.t0)) {\n              console.log(\"Request cancelled\");\n            } else if (_context2.t0.response) {\n              if (_context2.t0.response.status == 422) reportErrors(serializeErrors(_context2.t0.response.data));else if (_context2.t0.response.data.resp == 0) reportErrors(serializeErrors({\n                error: _context2.t0.response.data.message\n              }));else reportErrors(serializeErrors({\n                error: \"Failed to upload CV\"\n              }));\n            } else {\n              console.log(_context2.t0);\n            }\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  var _handleDownloadCV = function _handleDownloadCV() {\n    var options, response;\n    return _regeneratorRuntime.async(function _handleDownloadCV$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            options = {\n              method: \"POST\",\n              url: apiPath + \"/downloadCV\",\n              data: {\n                email: authUser.email\n              }\n            };\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(Axios(options).then(function (res) {\n              return res.data;\n            }));\n\n          case 4:\n            response = _context3.sent;\n\n            if (!(!response || response.resp == 0)) {\n              _context3.next = 7;\n              break;\n            }\n\n            throw new Error('Error');\n\n          case 7:\n            alert('Download successfull');\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            reportErrors('Failed to download');\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  var reportErrors = function reportErrors(error) {\n    if (!error) return;\n    Alert.alert(\"Error\", error, [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"Okey\");\n      }\n    }], {\n      cancelable: false\n    });\n  };\n\n  return React.createElement(ContainerFluid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, React.createElement(ImageBackground, {\n    source: ResumeCover,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    imageStyle: {\n      opacity: 0.08,\n      resizeMode: \"cover\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: globalStyles.contentWrapperCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, authUser.hasCV ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _handleDownloadCV();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, React.createElement(View, {\n    style: styles.downloadWrap,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"file-download\",\n    color: DefaultThemeColors.headerBg,\n    size: 32,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }), React.createElement(Text, {\n    style: {\n      marginLeft: 5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, React.createElement(AppText, {\n    size: 25,\n    color: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Download Resume\")))) : React.createElement(AppText, {\n    size: 25,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"No Resume\")), React.createElement(View, {\n    style: styles.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.helperText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, React.createElement(AppText, {\n    size: 16,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, authUser.hasCV ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, \"Click the button below to upload your new resume.\") : React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 19\n    }\n  }, \"You have not uploaded your resume. Click the button below to upload your resume.\")))), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleCVSubmit();\n    },\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.btn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Upload\"))))));\n}\n\nexport default Resume;\nvar styles = StyleSheet.create({\n  title: {\n    marginBottom: 10\n  },\n  downloadWrap: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  info: {\n    marginBottom: 30,\n    marginHorizontal: 40\n  },\n  helperText: {\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 23\n  },\n  btn: {\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    backgroundColor: DefaultThemeColors.headerBg,\n    borderRadius: 4\n  },\n  btnText: {\n    fontSize: 20,\n    textTransform: \"capitalize\",\n    color: \"#fff\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/resume.js"],"names":["React","useState","useContext","ContainerFluid","TouchableOpacity","DefaultThemeColors","Icon","AppText","ResumeCover","DocumentPicker","apiPath","Axios","globalStyles","serializeErrors","AuthContext","Resume","authUser","updateAuthUserCVStatus","isSubmitting","setIsSubmitting","_pickDocument","getDocumentAsync","result","type","console","log","handleCVSubmit","then","document","file","uri","name","formData","FormData","append","_uplaodCV","user","cv","alert","catch","err","options","method","url","data","headers","res","response","resp","isCancel","status","reportErrors","error","message","_handleDownloadCV","email","Error","Alert","text","onPress","cancelable","width","height","opacity","resizeMode","contentWrapperCenter","styles","title","hasCV","downloadWrap","headerBg","marginLeft","info","helperText","btn","btnText","StyleSheet","create","marginBottom","flexDirection","alignItems","justifyContent","marginHorizontal","fontSize","textAlign","lineHeight","paddingHorizontal","paddingVertical","backgroundColor","borderRadius","textTransform","color"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { View, Text, StyleSheet, ImageBackground, Alert } from \"react-native\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { DefaultThemeColors } from \"../../utils/constants/Colors\";\nimport Icon from \"../../shared/icon\";\nimport AppText from \"../../shared/appText\";\nimport ResumeCover from \"../../assets/img/file-upload.jpg\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport Axios from \"axios\";\nimport { globalStyles } from \"../../styles/globalStyles\";\nimport { serializeErrors } from \"../../utils/Helpers\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\n\nfunction Resume() {\n  const {authUser, updateAuthUserCVStatus} = useContext(AuthContext);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  //async pcik document\n  const _pickDocument = async () => {\n    try {\n      let result = await DocumentPicker.getDocumentAsync({});\n      if(result.type == \"success\" ) return result;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //handle cv submit\n  const handleCVSubmit =  () => {\n    setIsSubmitting(true);\n\n    _pickDocument()\n      .then((document) => {\n        if(!document) return;\n\n        //show loader\n        setIsSubmitting(true);\n        \n        //create object with uri, type, fiile name\n        var file = {\n          uri: document.uri,\n          type: \"application/pdf\",\n          name: \"cv.pdf\",\n        };\n\n        // //use formdata\n        var formData = new FormData();\n        formData.append(\"cv\", file);\n\n        _uplaodCV(formData)\n          .then(user =>  {\n            console.log(user);\n            if(!user || !user.cv)  return;\n              updateAuthUserCVStatus();\n              alert('Resume uploaded successfully');\n          })\n          .catch(err => console.log(err)).then(() => setIsSubmitting(false));\n        \n      })\n      .catch((err) => console.log(err));\n  };\n\n  //async upload cv using axios\n  const _uplaodCV = async (formData) => {\n    try {\n      const options = {\n        method: \"POST\",\n        url: `${apiPath}/jobseeker/edit-profile`,\n        data: formData,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n    \n      const response = await Axios(options).then((res) => res.data);\n      if (response.resp == 1) return response.user;\n    } catch (err) {\n      if (Axios.isCancel(err)) {\n        console.log(\"Request cancelled\");\n      } else if (err.response) {\n        if (err.response.status == 422)\n          reportErrors(serializeErrors(err.response.data));\n        else if (err.response.data.resp == 0)\n          reportErrors(serializeErrors({ error: err.response.data.message }));\n        else reportErrors(serializeErrors({ error: \"Failed to upload CV\" }));\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  //downalod cv\n  const _handleDownloadCV = async () => {\n    try {\n      const options = {\n        method: \"POST\",\n        url: `${apiPath}/downloadCV`,\n        data: {email: authUser.email},\n      };\n    \n      const response = await Axios(options).then((res) => res.data);\n      if (!response ||response.resp == 0) throw new Error('Error');\n      alert('Download successfull');\n    } catch (err) {\n      reportErrors('Failed to download')\n    }\n  }\n\n    //report errors to user\n  const reportErrors = (error) => {\n    if (!error) return;\n    Alert.alert(\n      \"Error\",\n      error,\n      [\n        { text: \"OK\", onPress: () => console.log(\"Okey\") },\n      ],\n      { cancelable: false }\n    );\n  };\n\n  return (\n    <ContainerFluid>\n      <ImageBackground\n        source={ResumeCover}\n        style={{ width: \"100%\", height: \"100%\" }}\n        imageStyle={{ opacity: 0.08, resizeMode: \"cover\" }}\n      >\n        <View style={globalStyles.contentWrapperCenter}>\n          {/* header */}\n          <View style={styles.title}>\n            {authUser.hasCV ? (\n              <TouchableOpacity onPress={() => _handleDownloadCV()}>\n                <View style={styles.downloadWrap}>\n                  <Icon\n                    name=\"file-download\"\n                    color={DefaultThemeColors.headerBg}\n                    size={32}\n                  />\n\n                  <Text\n                    style={{\n                      marginLeft: 5,\n                    }}\n                  >\n                    <AppText size={25} color=\"info\">\n                      Download Resume\n                    </AppText>\n                  </Text>\n                </View>\n              </TouchableOpacity>\n            ) : (\n              <AppText size={25}>No Resume</AppText>\n            )}\n          </View>\n          {/* header */}\n\n          {/* helper text */}\n          <View style={styles.info}>\n            <Text style={styles.helperText}>\n              <AppText size={16} color=\"secondary\">\n                {authUser.hasCV ? (\n                  <Text>Click the button below to upload your new resume.</Text>\n                ) : (\n                  <Text>\n                    You have not uploaded your resume. Click the button below to\n                    upload your resume.\n                  </Text>\n                )}\n              </AppText>\n            </Text>\n          </View>\n          {/* helper text */}\n\n          {/* file upload btn */}\n          <TouchableOpacity\n            onPress={() => handleCVSubmit()}\n            disabled={isSubmitting}\n          >\n            <View style={styles.btn}>\n              <Text style={styles.btnText}>Upload</Text>\n            </View>\n          </TouchableOpacity>\n          {/* file upload btn */}\n        </View>\n      </ImageBackground>\n    </ContainerFluid>\n  );\n}\n\nexport default Resume;\n\nconst styles = StyleSheet.create({\n  title: { marginBottom: 10 },\n  downloadWrap: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  info: { marginBottom: 30, marginHorizontal: 40 },\n  helperText: {\n    fontSize: 16,\n    textAlign: \"center\",\n    lineHeight: 23,\n  },\n  btn: {\n    paddingHorizontal: 30,\n    paddingVertical: 10,\n    backgroundColor: DefaultThemeColors.headerBg,\n    borderRadius: 4,\n  },\n  btnText: {\n    fontSize: 20,\n    textTransform: \"capitalize\",\n    color: \"#fff\",\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}