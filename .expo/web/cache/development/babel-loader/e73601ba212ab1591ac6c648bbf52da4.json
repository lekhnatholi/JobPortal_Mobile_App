{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/shared/jobBox.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { DarkThemeColors, DefaultThemeColors } from \"../utils/constants/Colors\";\nimport { globalStyles, images } from \"../styles/globalStyles\";\nimport Icon from \"./icon\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport AppText from \"./appText\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Asset } from \"expo-asset\";\n\nfunction JobBox(_ref) {\n  var job = _ref.job,\n      _onPress = _ref.onPress;\n\n  var _useContext = useContext(ThemeContext),\n      isThemeDark = _useContext.isThemeDark;\n\n  var Colors = isThemeDark ? DarkThemeColors : DefaultThemeColors;\n  var defaultLogoUri = Asset.fromModule(images.defaultLogo).uri;\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.jobBox), {}, {\n      backgroundColor: Colors.primaryBg\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: job.employer.logo ? job.employer.logo : defaultLogoUri\n    },\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.jobInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress(job.slug);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    size: 18,\n    color: \"info\",\n    family: \"semi-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, job.title)), React.createElement(AppText, {\n    color: \"secondary\",\n    weight: \"600\",\n    size: 15,\n    family: \"semi-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, job.employer.name), React.createElement(View, {\n    style: styles.jobInfoBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: globalStyles.rowAlignCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"location-on\",\n    size: 18,\n    color: \"#666666\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(AppText, {\n    color: \"secondary\",\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: \"marginLeft: 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \" \", job.employer.address))), React.createElement(View, {\n    style: globalStyles.rowAlignCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"attach-money\",\n    size: 18,\n    color: \"#666666\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), React.createElement(AppText, {\n    color: \"secondary\",\n    size: 14,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: \"marginLeft: 5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \" \", job.salary, \" \")))), React.createElement(View, {\n    style: styles.jobInfoFooter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(AppText, {\n    color: \"secondary\",\n    size: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, job.level), React.createElement(AppText, {\n    color: \"info\",\n    size: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Deadline: \", job.deadline))));\n}\n\nvar styles = StyleSheet.create({\n  jobBox: {\n    padding: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#ffffff\",\n    borderBottomColor: \"#c1c1c1\",\n    borderBottomWidth: 1\n  },\n  logo: {\n    height: 80,\n    width: 80,\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#ccc\"\n  },\n  jobInfo: {\n    marginLeft: 30,\n    flexGrow: 1,\n    justifyContent: \"center\"\n  },\n  jobInfoBody: {\n    marginLeft: 10,\n    marginVertical: 5\n  },\n  jobInfoFooter: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }\n});\nexport default JobBox;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/shared/jobBox.js"],"names":["React","useContext","DarkThemeColors","DefaultThemeColors","globalStyles","images","Icon","ThemeContext","AppText","TouchableOpacity","Asset","JobBox","job","onPress","isThemeDark","Colors","defaultLogoUri","fromModule","defaultLogo","uri","styles","jobBox","backgroundColor","primaryBg","employer","logo","jobInfo","slug","title","name","jobInfoBody","rowAlignCenter","address","salary","jobInfoFooter","level","deadline","StyleSheet","create","padding","flexDirection","borderBottomColor","borderBottomWidth","height","width","alignSelf","borderWidth","borderColor","marginLeft","flexGrow","justifyContent","marginVertical","alignItems"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { View, Text, StyleSheet, Image } from \"react-native\";\nimport { DarkThemeColors, DefaultThemeColors } from \"../utils/constants/Colors\";\nimport { globalStyles, images } from \"../styles/globalStyles\";\nimport Icon from \"./icon\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport AppText from \"./appText\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Asset } from \"expo-asset\";\n\nfunction JobBox({ job , onPress}) {\n  const { isThemeDark } = useContext(ThemeContext);\n  const Colors = isThemeDark ? DarkThemeColors : DefaultThemeColors;\n  \n  //default logo and cover uri\n  const defaultLogoUri = Asset.fromModule(images.defaultLogo).uri;\n\n  return (\n    <View style={{ ...styles.jobBox, backgroundColor: Colors.primaryBg }}>\n      <Image\n        source={{uri : job.employer.logo ? job.employer.logo : defaultLogoUri}}\n        style={styles.logo}\n      />\n      <View style={styles.jobInfo}>\n        <TouchableOpacity onPress={() => onPress(job.slug)}>\n          <AppText size={18} color=\"info\" family=\"semi-bold\">\n            {job.title}\n          </AppText>\n        </TouchableOpacity>\n        <AppText color=\"secondary\" weight=\"600\" size={15} family=\"semi-bold\">\n          {job.employer.name}\n        </AppText>\n\n        <View style={styles.jobInfoBody}>\n          <View style={globalStyles.rowAlignCenter}>\n            <Icon name=\"location-on\" size={18} color=\"#666666\" />\n            <AppText color=\"secondary\" size={14}>\n              <Text style=\"marginLeft: 5\"> {job.employer.address}</Text>\n            </AppText>\n          </View>\n          <View style={globalStyles.rowAlignCenter}>\n            <Icon name=\"attach-money\" size={18} color=\"#666666\" />\n            <AppText color=\"secondary\" size={14}>\n              <Text style=\"marginLeft: 5\"> {job.salary} </Text>\n            </AppText>\n          </View>\n        </View>\n        <View style={styles.jobInfoFooter}>\n          <AppText color=\"secondary\" size={12}>\n            {job.level}\n          </AppText>\n          <AppText color=\"info\" size={10}>\n            Deadline: {job.deadline}\n          </AppText>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  jobBox: {\n    padding: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#ffffff\",\n    borderBottomColor: \"#c1c1c1\",\n    borderBottomWidth: 1,\n  },\n  logo: {\n    height: 80,\n    width: 80,\n    alignSelf: \"center\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n  },\n  jobInfo: { marginLeft: 30, flexGrow: 1, justifyContent: \"center\" },\n\n  jobInfoBody: {\n    marginLeft: 10,\n    marginVertical: 5,\n  },\n\n  jobInfoFooter: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n\n});\n\nexport default JobBox;\n"]},"metadata":{},"sourceType":"module"}