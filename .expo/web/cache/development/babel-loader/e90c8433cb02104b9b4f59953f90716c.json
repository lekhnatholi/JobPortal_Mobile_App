{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/changePassword.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppBtn from \"../../shared/appBtn\";\nimport ErrorText from \"../../shared/errorText\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport FormGroup from \"../../shared/formGroup\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Input from \"../../shared/input\";\nimport { globalStyles } from \"../../styles/globalStyles\";\nimport useErrorHandler from \"../../utils/custom-hooks/ErrorHandler\";\nimport ErrorMessage from \"../../shared/errorMessage\";\nimport Axios from \"axios\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport { serializeErrors } from \"../../utils/Helpers\";\nvar changePasswordSchema = yup.object({\n  oldPassword: yup.string().required(\"Old Password is required\"),\n  password: yup.string().required(\"Password is required\").min(6, \"Password must be minimum of 6 charaters\"),\n  confirmPassword: yup.string().required(\"Confimation Password is required\").oneOf([yup.ref(\"password\"), null], \"Passwords don't match\")\n});\n\nfunction ChangePassword(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      isThemeDark = _useContext.isThemeDark;\n\n  var _useErrorHandler = useErrorHandler(null),\n      error = _useErrorHandler.error,\n      showError = _useErrorHandler.showError;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var handlePasswordChange = function handlePasswordChange(values, actions) {\n    setIsSubmitting(true);\n    var password = values.password,\n        confirmPassword = values.confirmPassword,\n        oldPassword = values.oldPassword;\n\n    _changePassword({\n      password: password,\n      password_confirmation: confirmPassword,\n      old_password: oldPassword\n    }).then(function (message) {\n      if (message) alert(message);\n    }).catch(function (err) {\n      return console.log(err);\n    }).then(function () {\n      return setIsSubmitting(false);\n    });\n  };\n\n  var _changePassword = function _changePassword(data) {\n    var url, response;\n    return _regeneratorRuntime.async(function _changePassword$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = apiPath + \"/change-password\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Axios.post(url, data).then(function (res) {\n              return res.data;\n            }));\n\n          case 4:\n            response = _context.sent;\n\n            if (!(response.resp == 1)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.message);\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (Axios.isCancel(_context.t0)) {\n              console.log(\"Request Cancelled\", _context.t0);\n            } else if (_context.t0.response) {\n              if (_context.t0.response.status == 422) showError(serializeErrors(_context.t0.response.data));else if (_context.t0.response.data.resp == 0) showError(serializeErrors({\n                error: _context.t0.response.data.message\n              }));else showError(serializeErrors({\n                error: \"Failed to change password\"\n              }));\n            } else {\n              console.log(\"Error\", _context.t0);\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(ContainerFluid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: globalStyles.flexGrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, globalStyles.authForm), {}, {\n      backgroundColor: isThemeDark ? \"#000\" : \"#36485f\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, error && React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 23\n    }\n  }, error, \" \"), React.createElement(Formik, {\n    initialValues: {\n      password: \"\",\n      oldPassword: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: changePasswordSchema,\n    onSubmit: function onSubmit(values, actions) {\n      handlePasswordChange(values, actions);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit;\n    return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.oldPassword,\n      onChangeText: handleChange(\"oldPassword\"),\n      onBlur: handleBlur(\"oldPassword\"),\n      placeholder: \"Old Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), touched.oldPassword && errors.oldPassword ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, errors.oldPassword) : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.password,\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      placeholder: \"New Password\",\n      secureTextEntry: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), touched.password && errors.password ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, errors.password) : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.confirmPassword,\n      onChangeText: handleChange(\"confirmPassword\"),\n      onBlur: handleBlur(\"confirmPassword\"),\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), touched.confirmPassword && errors.confirmPassword ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, errors.confirmPassword) : null), React.createElement(View, {\n      style: {\n        marginTop: 20,\n        paddingHorizontal: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 19\n      }\n    }, React.createElement(AppBtn, {\n      title: \"Change Password\",\n      onPress: handleSubmit,\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/changePassword.js"],"names":["React","useContext","useState","AppBtn","ErrorText","ContainerFluid","FormGroup","ThemeContext","AuthContext","Formik","yup","Input","globalStyles","useErrorHandler","ErrorMessage","Axios","apiPath","serializeErrors","changePasswordSchema","object","oldPassword","string","required","password","min","confirmPassword","oneOf","ref","ChangePassword","navigation","isThemeDark","error","showError","isSubmitting","setIsSubmitting","handlePasswordChange","values","actions","_changePassword","password_confirmation","old_password","then","message","alert","catch","err","console","log","data","url","post","res","response","resp","isCancel","status","flexGrow","Keyboard","dismiss","authForm","backgroundColor","errors","touched","handleChange","handleBlur","handleSubmit","marginTop","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  Text,\n} from \"react-native\";\nimport AppBtn from \"../../shared/appBtn\";\nimport ErrorText from \"../../shared/errorText\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport FormGroup from \"../../shared/formGroup\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { AuthContext } from \"../../contexts/AuthContext\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Input from \"../../shared/input\";\nimport { globalStyles } from \"../../styles/globalStyles\";\nimport useErrorHandler from \"../../utils/custom-hooks/ErrorHandler\";\nimport ErrorMessage from \"../../shared/errorMessage\";\nimport Axios from \"axios\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport { serializeErrors } from \"../../utils/Helpers\";\n\n//change password validation schema\nconst changePasswordSchema = yup.object({\n  oldPassword: yup.string().required(\"Old Password is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Password must be minimum of 6 charaters\"),\n  confirmPassword: yup\n    .string()\n    .required(\"Confimation Password is required\")\n    .oneOf([yup.ref(\"password\"), null], \"Passwords don't match\"),\n});\n\nfunction ChangePassword({ navigation }) {\n  const { isThemeDark } = useContext(ThemeContext);\n  const { error, showError } = useErrorHandler(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handlePasswordChange = (values, actions) => {\n    setIsSubmitting(true);\n    const { password, confirmPassword, oldPassword } = values;\n\n    //perform api call to update password\n    _changePassword({\n      password,\n      password_confirmation: confirmPassword,\n      old_password: oldPassword,\n    })\n      .then((message) => {\n        if (message) alert(message);\n      })\n      .catch((err) => console.log(err))\n      .then(() => setIsSubmitting(false));\n  };\n\n  const _changePassword = async (data) => {\n    try {\n      let url = `${apiPath}/change-password`;\n      let response = await Axios.post(url, data).then((res) => res.data);\n      if (response.resp == 1) return response.message;\n    } catch (err) {\n      if (Axios.isCancel(err)) {\n        console.log(\"Request Cancelled\", err);\n      } else if (err.response) {\n        if (err.response.status == 422)\n          showError(serializeErrors(err.response.data));\n        else if (err.response.data.resp == 0)\n          showError(serializeErrors({ error: err.response.data.message }));\n        else showError(serializeErrors({ error: \"Failed to change password\" }));\n      } else {\n        console.log(\"Error\", err);\n      }\n    }\n  };\n\n  return (\n    <ContainerFluid>\n      <ScrollView contentContainerStyle={globalStyles.flexGrow}>\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n          <View\n            style={{\n              ...globalStyles.authForm,\n              backgroundColor: isThemeDark ? \"#000\" : \"#36485f\",\n            }}\n          >\n            {error && <ErrorMessage>{error} </ErrorMessage>}\n\n            <Formik\n              initialValues={{\n                password: \"\",\n                oldPassword: \"\",\n                confirmPassword: \"\",\n              }}\n              validationSchema={changePasswordSchema}\n              onSubmit={(values, actions) => {\n                handlePasswordChange(values, actions);\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n              }) => (\n                <>\n                  <FormGroup>\n                    <Input\n                      value={values.oldPassword}\n                      onChangeText={handleChange(\"oldPassword\")}\n                      onBlur={handleBlur(\"oldPassword\")}\n                      placeholder={\"Old Password\"}\n                    />\n                    {touched.oldPassword && errors.oldPassword ? (\n                      <ErrorText>{errors.oldPassword}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Input\n                      value={values.password}\n                      onChangeText={handleChange(\"password\")}\n                      onBlur={handleBlur(\"password\")}\n                      placeholder={\"New Password\"}\n                      secureTextEntry={true}\n                    />\n                    {touched.password && errors.password ? (\n                      <ErrorText>{errors.password}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Input\n                      value={values.confirmPassword}\n                      onChangeText={handleChange(\"confirmPassword\")}\n                      onBlur={handleBlur(\"confirmPassword\")}\n                      placeholder={\"Confirm Password\"}\n                      secureTextEntry={true}\n                    />\n                    {touched.confirmPassword && errors.confirmPassword ? (\n                      <ErrorText>{errors.confirmPassword}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <View style={{ marginTop: 20, paddingHorizontal: 10 }}>\n                    <AppBtn\n                      title=\"Change Password\"\n                      onPress={handleSubmit}\n                      disabled={isSubmitting}\n                    />\n                  </View>\n                </>\n              )}\n            </Formik>\n          </View>\n        </TouchableWithoutFeedback>\n      </ScrollView>\n    </ContainerFluid>\n  );\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}