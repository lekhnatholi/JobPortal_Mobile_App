{"ast":null,"code":"var _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/contexts/ThemeContext.js\";\nimport * as React from \"react\";\nimport useThemeHandler from \"../utils/custom-hooks/ThemeHandler\";\nimport { DEFAULT_THEME } from \"../utils/constants/Consts\";\nimport { getStoredTheme } from \"../utils/Helpers\";\nimport { DEFAULT_IS_THEME_DARK } from \"../utils/constants/Consts\";\nexport var ThemeContext = React.createContext({\n  theme: DEFAULT_THEME,\n  toggleTheme: function toggleTheme() {},\n  isThemeDark: DEFAULT_THEME === \"dark\" ? true : false\n});\n\nvar ThemeContextProvider = function ThemeContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useThemeHandler = useThemeHandler(getStoredTheme()),\n      theme = _useThemeHandler.theme,\n      toggleTheme = _useThemeHandler.toggleTheme,\n      isThemeDark = _useThemeHandler.isThemeDark;\n\n  return React.createElement(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      toggleTheme: toggleTheme,\n      isThemeDark: isThemeDark\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default ThemeContextProvider;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/contexts/ThemeContext.js"],"names":["React","useThemeHandler","DEFAULT_THEME","getStoredTheme","DEFAULT_IS_THEME_DARK","ThemeContext","createContext","theme","toggleTheme","isThemeDark","ThemeContextProvider","children"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,eAAP;AAEA,SAASC,aAAT;AACA,SAASC,cAAT;AACA,SAASC,qBAAT;AAEA,OAAO,IAAMC,YAAY,GAAGL,KAAK,CAACM,aAAN,CAAoB;AAC9CC,EAAAA,KAAK,EAAEL,aADuC;AAE9CM,EAAAA,WAAW,EAAE,uBAAM,CAAE,CAFyB;AAG9CC,EAAAA,WAAW,EAAGP,aAAa,KAAK,MAAlB,GAA2B,IAA3B,GAAkC;AAHF,CAApB,CAArB;;AAMP,IAAMQ,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,yBACDV,eAAe,CACzDE,cAAc,EAD2C,CADd;AAAA,MACrCI,KADqC,oBACrCA,KADqC;AAAA,MAC9BC,WAD8B,oBAC9BA,WAD8B;AAAA,MACjBC,WADiB,oBACjBA,WADiB;;AAK7C,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEF,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,WAAW,EAAXA,WAAT;AAAsBC,MAAAA,WAAW,EAAXA;AAAtB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QADH,CADF;AAKD,CAVD;;AAWA,eAAeD,oBAAf","sourcesContent":["import * as React from \"react\";\n/** Custom Hooks */\nimport useThemeHandler from \"../utils/custom-hooks/ThemeHandler\";\n/** Utils */\nimport { DEFAULT_THEME } from \"../utils/constants/Consts\";\nimport { getStoredTheme } from \"../utils/Helpers\";\nimport { DEFAULT_IS_THEME_DARK } from \"../utils/constants/Consts\";\n\nexport const ThemeContext = React.createContext({\n  theme: DEFAULT_THEME,\n  toggleTheme: () => {},\n  isThemeDark: (DEFAULT_THEME === \"dark\" ? true : false),\n});\n\nconst ThemeContextProvider = ({ children }) => {\n  const { theme, toggleTheme, isThemeDark } = useThemeHandler(\n    getStoredTheme() // fetches stored theme value\n  );\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, isThemeDark }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\nexport default ThemeContextProvider;\n"]},"metadata":{},"sourceType":"module"}