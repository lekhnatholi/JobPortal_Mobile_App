{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { DEFAULT_AUTH_USER } from \"./constants/Consts\";\nimport { DEFAULT_THEME } from \"./constants/Consts\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nexport var getStoredAuthUser = function getStoredAuthUser() {\n  var authUser;\n  return _regeneratorRuntime.async(function getStoredAuthUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"authUser\"));\n\n        case 3:\n          authUser = _context.sent;\n\n          if (!authUser) {\n            _context.next = 6;\n            break;\n          }\n\n          return _context.abrupt(\"return\", authUser);\n\n        case 6:\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0);\n\n        case 11:\n          return _context.abrupt(\"return\", DEFAULT_AUTH_USER);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n};\nexport var getStoredTheme = function getStoredTheme() {\n  return DEFAULT_THEME;\n};\nexport var apiRequest = function apiRequest(url, method, bodyParams) {\n  var response;\n  return _regeneratorRuntime.async(function apiRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(fetch(url, {\n            method: method,\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: bodyParams ? JSON.stringify(bodyParams) : undefined\n          }));\n\n        case 2:\n          response = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var serializeErrors = function serializeErrors(errors) {\n  return Object.values(errors).join(\" \");\n};","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/utils/Helpers.js"],"names":["DEFAULT_AUTH_USER","DEFAULT_THEME","getStoredAuthUser","AsyncStorage","getItem","authUser","console","log","getStoredTheme","apiRequest","url","method","bodyParams","fetch","headers","Accept","body","JSON","stringify","undefined","response","json","serializeErrors","errors","Object","values","join"],"mappings":";AAAA,SAASA,iBAAT;AACA,SAASC,aAAT;;AAIA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAFQ;;AAAA;AAEzBC,UAAAA,QAFyB;;AAAA,eAGzBA,QAHyB;AAAA;AAAA;AAAA;;AAAA,2CAIpBA,QAJoB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAO7BC,UAAAA,OAAO,CAACC,GAAR;;AAP6B;AAAA,2CAUxBP,iBAVwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAcP,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAUlC,SAAOP,aAAP;AACD,CAXM;AAcP,OAAO,IAAMQ,UAAU,GAAG,SAAbA,UAAa,CAAOC,GAAP,EAAYC,MAAZ,EAAoBC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACDC,KAAK,CAACH,GAAD,EAAM;AAChCC,YAAAA,MAAM,EAANA,MADgC;AAEhCG,YAAAA,OAAO,EAAE;AACPC,cAAAA,MAAM,EAAE,kBADD;AAEP,8BAAgB;AAFT,aAFuB;AAMhCC,YAAAA,IAAI,EAAEJ,UAAU,GAAGK,IAAI,CAACC,SAAL,CAAeN,UAAf,CAAH,GAAgCO;AANhB,WAAN,CADJ;;AAAA;AAClBC,UAAAA,QADkB;AAAA;AAAA,2CASXA,QAAQ,CAACC,IAAT,EATW;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;AAaP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AACzC,SAAOC,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsBG,IAAtB,CAA2B,GAA3B,CAAP;AACD,CAFM","sourcesContent":["import { DEFAULT_AUTH_USER } from \"./constants/Consts\";\nimport { DEFAULT_THEME } from \"./constants/Consts\";\nimport { AsyncStorage } from \"react-native\";\n\n/** Return authenticated user from local storage */\nexport const getStoredAuthUser = async () => {\n  try {\n    let authUser = await AsyncStorage.getItem(\"authUser\");\n    if (authUser) {\n      return authUser;\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  return DEFAULT_AUTH_USER;\n};\n\n/** Return theme from local storage */\nexport const getStoredTheme = () => {\n  // try {\n  //   let theme = await AsyncStorage.getItem(\"theme\");\n  //   if (theme) {\n  //     return theme;\n  //   }\n  // } catch (e) {\n  //   console.log(e);\n  // }\n\n  return DEFAULT_THEME;\n};\n\n/** API Request handler  */\nexport const apiRequest = async (url, method, bodyParams) => {\n  const response = await fetch(url, {\n    method,\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: bodyParams ? JSON.stringify(bodyParams) : undefined,\n  });\n  return await response.json();\n};\n\n/** stringify errors */\nexport const serializeErrors = (errors) => {\n  return Object.values(errors).join(\" \");\n};\n"]},"metadata":{},"sourceType":"module"}