{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/register.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AppBtn from \"../../shared/appBtn\";\nimport ErrorText from \"../../shared/errorText\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport FormGroup from \"../../shared/formGroup\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Input from \"../../shared/input\";\nimport ErrorMessage from \"../../shared/errorMessage\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport Axios from \"axios\";\nimport useErrorHandler from \"../../utils/custom-hooks/ErrorHandler\";\nimport { serializeErrors } from \"../../utils/Helpers\";\nimport { globalStyles } from \"../../styles/globalStyles\";\nvar registerSchema = yup.object({\n  firstName: yup.string().required(\"First name is required\"),\n  lastName: yup.string().required(\"Last name is required\"),\n  email: yup.string().required(\"Email is required\").email(\"Please enter valid email\"),\n  password: yup.string().required(\"Password is required\").min(6, \"Password must be minimum of 6 charaters\"),\n  confirmPassword: yup.string().required(\"Confimation Password is required\").oneOf([yup.ref(\"password\"), null], \"Passwords don't match\")\n});\n\nfunction Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(ThemeContext),\n      isThemeDark = _useContext.isThemeDark;\n\n  var _useErrorHandler = useErrorHandler(null),\n      error = _useErrorHandler.error,\n      showError = _useErrorHandler.showError;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var handleRegister = function handleRegister(values, actions) {\n    setIsSubmitting(true);\n    var firstName = values.firstName,\n        lastName = values.lastName,\n        email = values.email,\n        password = values.password,\n        confirmPassword = values.confirmPassword;\n    var userRegisterData = {\n      entity: \"jobseeker\",\n      name: \"\",\n      first_name: firstName,\n      last_name: lastName,\n      email: email,\n      password: password,\n      password_confirmation: confirmPassword\n    };\n\n    _regitserUser(userRegisterData).then(function (res) {\n      if (res) alert(res);\n      actions.resetForm();\n    }).catch(function (err) {\n      return console.log(err);\n    }).then(function () {\n      setIsSubmitting(false);\n    });\n  };\n\n  var _regitserUser = function _regitserUser(data) {\n    var url, result;\n    return _regeneratorRuntime.async(function _regitserUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = apiPath + \"/userRegister\";\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Axios.post(url, data).then(function (res) {\n              return res.data;\n            }));\n\n          case 4:\n            result = _context.sent;\n\n            if (!(result.resp == 1)) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", result.message);\n\n          case 7:\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (Axios.isCancel(_context.t0)) {\n              console.log(\"Request cancelled\");\n            } else if (_context.t0.response) {\n              if (_context.t0.response.status == 422) showError(serializeErrors(_context.t0.response.data));else if (_context.t0.response.data.resp == 0) showError(serializeErrors({\n                error: _context.t0.response.data.message\n              }));else showError(serializeErrors({\n                error: \"Failed to register\"\n              }));\n            } else {\n              console.log(_context.t0);\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  return React.createElement(ContainerFluid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: globalStyles.flexGrow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, globalStyles.authForm), {}, {\n      backgroundColor: isThemeDark ? \"#000\" : \"#36485f\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, error && React.createElement(ErrorMessage, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, error), React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      password: \"\",\n      email: \"\",\n      confirmPassword: \"\"\n    },\n    validationSchema: registerSchema,\n    onSubmit: function onSubmit(values, actions) {\n      handleRegister(values, actions);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var values = _ref2.values,\n        errors = _ref2.errors,\n        touched = _ref2.touched,\n        handleChange = _ref2.handleChange,\n        handleBlur = _ref2.handleBlur,\n        handleSubmit = _ref2.handleSubmit;\n    return React.createElement(React.Fragment, null, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.firstName,\n      onChangeText: handleChange(\"firstName\"),\n      onBlur: handleBlur(\"firstName\"),\n      placeholder: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), touched.firstName && errors.firstName ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 23\n      }\n    }, errors.firstName) : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.lastName,\n      onChangeText: handleChange(\"lastName\"),\n      onBlur: handleBlur(\"lastName\"),\n      placeholder: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }), touched.lastName && errors.lastName ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, errors.lastName) : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.email,\n      onChangeText: handleChange(\"email\"),\n      onBlur: handleBlur(\"email\"),\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }), touched.email && errors.email ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, errors.email) : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.password,\n      onChangeText: handleChange(\"password\"),\n      onBlur: handleBlur(\"password\"),\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }), touched.password && errors.password ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, errors.password) : null), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, React.createElement(Input, {\n      value: values.confirmPassword,\n      onChangeText: handleChange(\"confirmPassword\"),\n      onBlur: handleBlur(\"confirmPassword\"),\n      placeholder: \"Confirm Password\",\n      secureTextEntry: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }), touched.confirmPassword && errors.confirmPassword ? React.createElement(ErrorText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, errors.confirmPassword) : null), React.createElement(View, {\n      style: {\n        marginTop: 20,\n        paddingHorizontal: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, React.createElement(AppBtn, {\n      title: \"Register\",\n      onPress: handleSubmit,\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/register.js"],"names":["React","useContext","useState","AppBtn","ErrorText","ContainerFluid","FormGroup","ThemeContext","Formik","yup","Input","ErrorMessage","apiPath","Axios","useErrorHandler","serializeErrors","globalStyles","registerSchema","object","firstName","string","required","lastName","email","password","min","confirmPassword","oneOf","ref","Register","navigation","isThemeDark","error","showError","isSubmitting","setIsSubmitting","handleRegister","values","actions","userRegisterData","entity","name","first_name","last_name","password_confirmation","_regitserUser","then","res","alert","resetForm","catch","err","console","log","data","url","post","result","resp","message","isCancel","response","status","flexGrow","Keyboard","dismiss","authForm","backgroundColor","errors","touched","handleChange","handleBlur","handleSubmit","marginTop","paddingHorizontal"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;;;;;AAQA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AACA,OAAOC,SAAP;AACA,SAASC,YAAT;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP;AACA,OAAOC,YAAP;AACA,SAASC,OAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP;AACA,SAASC,eAAT;AACA,SAASC,YAAT;AAGA,IAAMC,cAAc,GAAGR,GAAG,CAACS,MAAJ,CAAW;AAChCC,EAAAA,SAAS,EAAEV,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,wBAAtB,CADqB;AAEhCC,EAAAA,QAAQ,EAAEb,GAAG,CAACW,MAAJ,GAAaC,QAAb,CAAsB,uBAAtB,CAFsB;AAGhCE,EAAAA,KAAK,EAAEd,GAAG,CACPW,MADI,GAEJC,QAFI,CAEK,mBAFL,EAGJE,KAHI,CAGE,0BAHF,CAHyB;AAOhCC,EAAAA,QAAQ,EAAEf,GAAG,CACVW,MADO,GAEPC,QAFO,CAEE,sBAFF,EAGPI,GAHO,CAGH,CAHG,EAGA,yCAHA,CAPsB;AAWhCC,EAAAA,eAAe,EAAEjB,GAAG,CACjBW,MADc,GAEdC,QAFc,CAEL,kCAFK,EAGdM,KAHc,CAGR,CAAClB,GAAG,CAACmB,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAHQ,EAGqB,uBAHrB;AAXe,CAAX,CAAvB;;AAiBA,SAASC,QAAT,OAAkC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAAA,oBACR7B,UAAU,CAACM,YAAD,CADF;AAAA,MACxBwB,WADwB,eACxBA,WADwB;;AAAA,yBAEHjB,eAAe,CAAC,IAAD,CAFZ;AAAA,MAExBkB,KAFwB,oBAExBA,KAFwB;AAAA,MAEjBC,SAFiB,oBAEjBA,SAFiB;;AAAA,kBAGQ/B,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,MAGzBgC,YAHyB;AAAA,MAGXC,eAHW;;AAMhC,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,OAAT,EAAqB;AAC1CH,IAAAA,eAAe,CAAC,IAAD,CAAf;AAD0C,QAElChB,SAFkC,GAEwBkB,MAFxB,CAElClB,SAFkC;AAAA,QAEvBG,QAFuB,GAEwBe,MAFxB,CAEvBf,QAFuB;AAAA,QAEbC,KAFa,GAEwBc,MAFxB,CAEbd,KAFa;AAAA,QAENC,QAFM,GAEwBa,MAFxB,CAENb,QAFM;AAAA,QAEIE,eAFJ,GAEwBW,MAFxB,CAEIX,eAFJ;AAI1C,QAAMa,gBAAgB,GAAG;AACvBC,MAAAA,MAAM,EAAE,WADe;AAEvBC,MAAAA,IAAI,EAAE,EAFiB;AAGvBC,MAAAA,UAAU,EAAEvB,SAHW;AAIvBwB,MAAAA,SAAS,EAAErB,QAJY;AAKvBC,MAAAA,KAAK,EAALA,KALuB;AAMvBC,MAAAA,QAAQ,EAARA,QANuB;AAOvBoB,MAAAA,qBAAqB,EAAElB;AAPA,KAAzB;;AAUAmB,IAAAA,aAAa,CAACN,gBAAD,CAAb,CACGO,IADH,CACQ,UAACC,GAAD,EAAS;AAEb,UAAIA,GAAJ,EAASC,KAAK,CAACD,GAAD,CAAL;AAETT,MAAAA,OAAO,CAACW,SAAR;AACD,KANH,EAOGC,KAPH,CAOS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAPZ,EAQGL,IARH,CAQQ,YAAM;AACVX,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD,KAVH;AAWD,GAzBD;;AA4BA,MAAMU,aAAa,GAAG,SAAhBA,aAAgB,CAAOS,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,GADgB,GACP3C,OADO;AAAA;AAAA;AAAA,6CAIGC,KAAK,CAAC2C,IAAN,CAAWD,GAAX,EAAgBD,IAAhB,EAAsBR,IAAtB,CAA2B,UAACC,GAAD;AAAA,qBAASA,GAAG,CAACO,IAAb;AAAA,aAA3B,CAJH;;AAAA;AAIZG,YAAAA,MAJY;;AAAA,kBAKdA,MAAM,CAACC,IAAP,IAAe,CALD;AAAA;AAAA;AAAA;;AAAA,6CAKWD,MAAM,CAACE,OALlB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAOlB,gBAAI9C,KAAK,CAAC+C,QAAN,aAAJ,EAAyB;AACvBR,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,aAFD,MAEO,IAAI,YAAIQ,QAAR,EAAkB;AACvB,kBAAI,YAAIA,QAAJ,CAAaC,MAAb,IAAuB,GAA3B,EACE7B,SAAS,CAAClB,eAAe,CAAC,YAAI8C,QAAJ,CAAaP,IAAd,CAAhB,CAAT,CADF,KAEK,IAAI,YAAIO,QAAJ,CAAaP,IAAb,CAAkBI,IAAlB,IAA0B,CAA9B,EACHzB,SAAS,CAAClB,eAAe,CAAC;AAAEiB,gBAAAA,KAAK,EAAE,YAAI6B,QAAJ,CAAaP,IAAb,CAAkBK;AAA3B,eAAD,CAAhB,CAAT,CADG,KAEA1B,SAAS,CAAClB,eAAe,CAAC;AAAEiB,gBAAAA,KAAK,EAAE;AAAT,eAAD,CAAhB,CAAT;AACN,aANM,MAMA;AACLoB,cAAAA,OAAO,CAACC,GAAR;AACD;;AAjBiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAqBA,SACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,qBAAqB,EAAErC,YAAY,CAAC+C,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACC,OAAT,EAAN;AAAA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,kCACAjD,YAAY,CAACkD,QADb;AAEHC,MAAAA,eAAe,EAAEpC,WAAW,GAAG,MAAH,GAAY;AAFrC,MADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,KAAK,IAAI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,KAAf,CANZ,EAQE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbb,MAAAA,SAAS,EAAE,EADE;AAEbG,MAAAA,QAAQ,EAAE,EAFG;AAGbE,MAAAA,QAAQ,EAAE,EAHG;AAIbD,MAAAA,KAAK,EAAE,EAJM;AAKbG,MAAAA,eAAe,EAAE;AALJ,KADjB;AAQE,IAAA,gBAAgB,EAAET,cARpB;AASE,IAAA,QAAQ,EAAE,kBAACoB,MAAD,EAASC,OAAT,EAAqB;AAC7BF,MAAAA,cAAc,CAACC,MAAD,EAASC,OAAT,CAAd;AACD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaG;AAAA,QACCD,MADD,SACCA,MADD;AAAA,QAEC+B,MAFD,SAECA,MAFD;AAAA,QAGCC,OAHD,SAGCA,OAHD;AAAA,QAICC,YAJD,SAICA,YAJD;AAAA,QAKCC,UALD,SAKCA,UALD;AAAA,QAMCC,YAND,SAMCA,YAND;AAAA,WAQC,0CACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEnC,MAAM,CAAClB,SADhB;AAEE,MAAA,YAAY,EAAEmD,YAAY,CAAC,WAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,WAAD,CAHpB;AAIE,MAAA,WAAW,EAAE,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGF,OAAO,CAAClD,SAAR,IAAqBiD,MAAM,CAACjD,SAA5B,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYiD,MAAM,CAACjD,SAAnB,CADD,GAEG,IATN,CADF,EAaE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEkB,MAAM,CAACf,QADhB;AAEE,MAAA,YAAY,EAAEgD,YAAY,CAAC,UAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,UAAD,CAHpB;AAIE,MAAA,WAAW,EAAE,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGF,OAAO,CAAC/C,QAAR,IAAoB8C,MAAM,CAAC9C,QAA3B,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY8C,MAAM,CAAC9C,QAAnB,CADD,GAEG,IATN,CAbF,EAyBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEe,MAAM,CAACd,KADhB;AAEE,MAAA,YAAY,EAAE+C,YAAY,CAAC,OAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,OAAD,CAHpB;AAIE,MAAA,WAAW,EAAE,OAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOGF,OAAO,CAAC9C,KAAR,IAAiB6C,MAAM,CAAC7C,KAAxB,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY6C,MAAM,CAAC7C,KAAnB,CADD,GAEG,IATN,CAzBF,EAqCE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEc,MAAM,CAACb,QADhB;AAEE,MAAA,YAAY,EAAE8C,YAAY,CAAC,UAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,UAAD,CAHpB;AAIE,MAAA,WAAW,EAAE,UAJf;AAKE,MAAA,eAAe,EAAE,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQGF,OAAO,CAAC7C,QAAR,IAAoB4C,MAAM,CAAC5C,QAA3B,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY4C,MAAM,CAAC5C,QAAnB,CADD,GAEG,IAVN,CArCF,EAkDE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEa,MAAM,CAACX,eADhB;AAEE,MAAA,YAAY,EAAE4C,YAAY,CAAC,iBAAD,CAF5B;AAGE,MAAA,MAAM,EAAEC,UAAU,CAAC,iBAAD,CAHpB;AAIE,MAAA,WAAW,EAAE,kBAJf;AAKE,MAAA,eAAe,EAAE,IALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQGF,OAAO,CAAC3C,eAAR,IAA2B0C,MAAM,CAAC1C,eAAlC,GACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAY0C,MAAM,CAAC1C,eAAnB,CADD,GAEG,IAVN,CAlDF,EA+DE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAE+C,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,iBAAiB,EAAE;AAApC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAyB,MAAA,OAAO,EAAEF,YAAlC;AAAgD,MAAA,QAAQ,EAAEtC,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/DF,CARD;AAAA,GAbH,CARF,CADF,CADF,CADF,CADF;AA2GD;;AAED,eAAeL,QAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport {\n  View,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  Text,\n} from \"react-native\";\nimport AppBtn from \"../../shared/appBtn\";\nimport ErrorText from \"../../shared/errorText\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport FormGroup from \"../../shared/formGroup\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport Input from \"../../shared/input\";\nimport ErrorMessage from \"../../shared/errorMessage\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport Axios from \"axios\";\nimport useErrorHandler from \"../../utils/custom-hooks/ErrorHandler\";\nimport { serializeErrors } from \"../../utils/Helpers\";\nimport { globalStyles } from \"../../styles/globalStyles\";\n\n//register validation schema\nconst registerSchema = yup.object({\n  firstName: yup.string().required(\"First name is required\"),\n  lastName: yup.string().required(\"Last name is required\"),\n  email: yup\n    .string()\n    .required(\"Email is required\")\n    .email(\"Please enter valid email\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .min(6, \"Password must be minimum of 6 charaters\"),\n  confirmPassword: yup\n    .string()\n    .required(\"Confimation Password is required\")\n    .oneOf([yup.ref(\"password\"), null], \"Passwords don't match\"),\n});\n\nfunction Register({ navigation }) {\n  const { isThemeDark } = useContext(ThemeContext);\n  const { error, showError } = useErrorHandler(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  //handle user register form submit\n  const handleRegister = (values, actions) => {\n    setIsSubmitting(true);\n    const { firstName, lastName, email, password, confirmPassword } = values;\n\n    const userRegisterData = {\n      entity: \"jobseeker\",\n      name: \"\",\n      first_name: firstName,\n      last_name: lastName,\n      email,\n      password,\n      password_confirmation: confirmPassword,\n    };\n   \n    _regitserUser(userRegisterData)\n      .then((res) => {\n        //show success message\n        if (res) alert(res);\n        //reset form\n        actions.resetForm();\n      })\n      .catch(err => console.log(err))\n      .then(() => {\n        setIsSubmitting(false);\n      });\n  };\n\n  //async register user\n  const _regitserUser = async (data) => {\n    let url = `${apiPath}/userRegister`;\n\n    try {\n      const result = await Axios.post(url, data).then((res) => res.data);\n      if (result.resp == 1) return result.message;\n    } catch (err) {\n      if (Axios.isCancel(err)) {\n        console.log(\"Request cancelled\");\n      } else if (err.response) {\n        if (err.response.status == 422)\n          showError(serializeErrors(err.response.data));\n        else if (err.response.data.resp == 0)\n          showError(serializeErrors({ error: err.response.data.message }));\n        else showError(serializeErrors({ error: \"Failed to register\" }));\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  return (\n    <ContainerFluid>\n      <ScrollView contentContainerStyle={globalStyles.flexGrow}>\n        <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n          <View\n            style={{\n              ...globalStyles.authForm,\n              backgroundColor: isThemeDark ? \"#000\" : \"#36485f\",\n            }}\n          >\n            {error && <ErrorMessage>{error}</ErrorMessage>}\n\n            <Formik\n              initialValues={{\n                firstName: \"\",\n                lastName: \"\",\n                password: \"\",\n                email: \"\",\n                confirmPassword: \"\",\n              }}\n              validationSchema={registerSchema}\n              onSubmit={(values, actions) => {\n                handleRegister(values, actions);\n              }}\n            >\n              {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n              }) => (\n                <>\n                  <FormGroup>\n                    <Input\n                      value={values.firstName}\n                      onChangeText={handleChange(\"firstName\")}\n                      onBlur={handleBlur(\"firstName\")}\n                      placeholder={\"First Name\"}\n                    />\n                    {touched.firstName && errors.firstName ? (\n                      <ErrorText>{errors.firstName}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Input\n                      value={values.lastName}\n                      onChangeText={handleChange(\"lastName\")}\n                      onBlur={handleBlur(\"lastName\")}\n                      placeholder={\"Last Name\"}\n                    />\n                    {touched.lastName && errors.lastName ? (\n                      <ErrorText>{errors.lastName}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Input\n                      value={values.email}\n                      onChangeText={handleChange(\"email\")}\n                      onBlur={handleBlur(\"email\")}\n                      placeholder={\"Email\"}\n                    />\n                    {touched.email && errors.email ? (\n                      <ErrorText>{errors.email}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Input\n                      value={values.password}\n                      onChangeText={handleChange(\"password\")}\n                      onBlur={handleBlur(\"password\")}\n                      placeholder={\"Password\"}\n                      secureTextEntry={true}\n                    />\n                    {touched.password && errors.password ? (\n                      <ErrorText>{errors.password}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Input\n                      value={values.confirmPassword}\n                      onChangeText={handleChange(\"confirmPassword\")}\n                      onBlur={handleBlur(\"confirmPassword\")}\n                      placeholder={\"Confirm Password\"}\n                      secureTextEntry={true}\n                    />\n                    {touched.confirmPassword && errors.confirmPassword ? (\n                      <ErrorText>{errors.confirmPassword}</ErrorText>\n                    ) : null}\n                  </FormGroup>\n\n                  <View style={{ marginTop: 20, paddingHorizontal: 10 }}>\n                    <AppBtn title=\"Register\" onPress={handleSubmit} disabled={isSubmitting}/>\n                  </View>\n                </>\n              )}\n            </Formik>\n          </View>\n        </TouchableWithoutFeedback>\n      </ScrollView>\n    </ContainerFluid>\n  );\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}