{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/jobsApplied.js\";\nimport React, { useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport JobBox from \"../../shared/jobBox\";\nimport AppText from \"../../shared/appText\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport JobAppliedBox from \"../../shared/jobAppliedBox\";\nimport Axios from \"axios\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport Loader from \"../../shared/loader\";\n\nfunction JobsApplied(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      jobs = _useState2[0],\n      setJobs = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var gotoJobDetail = function gotoJobDetail(jobSlug) {\n    navigation.navigate(\"HomeTab\", {\n      screen: \"JobDetail\",\n      params: {\n        jobSlug: jobSlug\n      }\n    });\n  };\n\n  useFocusEffect(useCallback(function () {\n    var isAcitve = true;\n\n    if (isAcitve) {\n      _fetchAppliedJobs().then(function (jobs) {\n        if (jobs) setJobs(jobs);\n      }).catch(function (err) {\n        return console.log(err);\n      }).then(function () {\n        return setIsLoading(false);\n      });\n    }\n\n    return function () {\n      isAcitve = false;\n    };\n  }, []));\n\n  var _fetchAppliedJobs = function _fetchAppliedJobs() {\n    var url, response;\n    return _regeneratorRuntime.async(function _fetchAppliedJobs$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            url = apiPath + \"/jobseeker\";\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Axios.get(url).then(function (res) {\n              return res.data;\n            }));\n\n          case 4:\n            response = _context.sent;\n            console.log(response);\n\n            if (!(response.resp == 1)) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.result.jobs);\n\n          case 8:\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n\n            if (Axios.isCancel(_context.t0)) {\n              console.log(\"Request Cancelled\", _context.t0);\n            } else if (_context.t0.response) {\n              console.log(_context.t0.response.data);\n            } else {\n              console.log(\"Error\", _context.t0);\n            }\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  };\n\n  return React.createElement(ContainerFluid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }) : React.createElement(React.Fragment, null, jobs.length ? React.createElement(FlatList, {\n    data: jobs,\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(JobAppliedBox, {\n        job: item,\n        onPress: gotoJobDetail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      });\n    },\n    contentContainerStyle: {\n      marginBottom: 30\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, React.createElement(AppText, {\n    size: 20,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"No jobs applied yet\"))));\n}\n\nexport default JobsApplied;","map":{"version":3,"sources":["/home/lekhu/Documents/David/Jobportal-Mobile-App/screens/profileStacks/jobsApplied.js"],"names":["React","useState","useCallback","ContainerFluid","JobBox","AppText","useFocusEffect","JobAppliedBox","Axios","apiPath","Loader","JobsApplied","navigation","route","jobs","setJobs","isLoading","setIsLoading","gotoJobDetail","jobSlug","navigate","screen","params","isAcitve","_fetchAppliedJobs","then","catch","err","console","log","url","get","res","data","response","resp","result","isCancel","length","item","id","toString","marginBottom","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { View, ScrollView, FlatList, RefreshControl } from \"react-native\";\nimport ContainerFluid from \"../../shared/containerFluid\";\nimport JobBox from \"../../shared/jobBox\";\nimport AppText from \"../../shared/appText\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport JobAppliedBox from \"../../shared/jobAppliedBox\";\nimport Axios from \"axios\";\nimport { apiPath } from \"../../utils/constants/Consts\";\nimport Loader from \"../../shared/loader\";\n\nfunction JobsApplied({ navigation, route }) {\n  const [jobs, setJobs] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  //navigate to job detail\n  const gotoJobDetail = (jobSlug) => {\n    navigation.navigate(\"HomeTab\", {\n      screen: \"JobDetail\",\n      params: {\n        jobSlug,\n      },\n    });\n  };\n\n  useFocusEffect(\n    useCallback(() => {\n      let isAcitve = true;\n      if (isAcitve) {\n        _fetchAppliedJobs()\n          .then(jobs => {\n            if (jobs) setJobs(jobs);\n          })\n          .catch((err) => console.log(err))\n          .then(() => setIsLoading(false));\n      }\n      return () => {\n        isAcitve = false;\n      };\n    }, [])\n  );\n\n  const _fetchAppliedJobs = async () => {\n    try {\n      let url = `${apiPath}/jobseeker`;\n      let response = await Axios.get(url).then((res) => res.data);\n      console.log(response);\n      if (response.resp == 1) return response.result.jobs;\n    } catch (err) {\n      if (Axios.isCancel(err)) {\n        console.log(\"Request Cancelled\", err);\n      } else if (err.response) {\n        console.log(err.response.data);\n      } else {\n        console.log(\"Error\", err);\n      }\n    }\n  };\n\n  return (\n    <ContainerFluid>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n        {jobs.length ? (\n//  job list start\n        <FlatList\n          data={jobs}\n          keyExtractor={(item) => item.id.toString()}\n          renderItem={({ item }) => (\n            <JobAppliedBox job={item} onPress={gotoJobDetail} />\n          )}\n          contentContainerStyle={{ marginBottom: 30 }}\n        />\n        //  job list end\n        ): (\n          <View style={{flex: 1, alignItems: \"center\", justifyContent: \"center\"}}>\n            <AppText size={20}>No jobs applied yet</AppText>\n          </View>\n        )}\n\n        </>\n      )}\n    </ContainerFluid>\n  );\n}\n\nexport default JobsApplied;\n"]},"metadata":{},"sourceType":"module"}